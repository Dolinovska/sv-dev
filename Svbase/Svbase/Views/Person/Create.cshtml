@using Svbase.Core.Models
@model Svbase.Core.Models.PersonViewModel
<div class="body-content margin-top">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="body-content margin-top">
            <div class="container">
                <div class="col-md-12">
                    <div class="col-md-6">
                        <h3 class="page-header">Створити персону</h3>
                    </div>
                    <div class="col-md-6">
                        <button class="btn btn-primary pull-right margin-top-30" type="submit">
                            <a class="white-color">Зберегти</a>
                        </button>
                    </div>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-md-12 margin-top">
                    <div class="col-md-9 ignore-padding">
                        <div class="col-md-12 block-container">
                            <div class="col-md-4 ignore-padding">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 ignore-padding">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 ignore-padding">
                                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12 block-container">
                            <div class="col-md-4 ignore-padding">
                                @Html.LabelFor(model => model.FirstMobilePhone, htmlAttributes: new { @class = "col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.FirstMobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstMobilePhone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 ignore-padding">
                                @Html.LabelFor(model => model.SecondMobilePhone, htmlAttributes: new { @class = "col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.SecondMobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.SecondMobilePhone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 ignore-padding">
                                @Html.LabelFor(model => model.HomePhone, htmlAttributes: new { @class = "col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12 block-container">
                            <div class="col-md-6 ignore-padding">
                                @Html.LabelFor(model => model.DateBirth, htmlAttributes: new { @class = "col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.DateBirth, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DateBirth, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6 ignore-padding">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-12" })
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12 block-container">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10 padding-top-7">

                                @Html.RadioButtonFor(m => m.Gender, true) @Html.Label("Чоловік")
                                <span class="padding-left"></span>
                                @Html.RadioButtonFor(m => m.Gender, false) @Html.Label("Жінка")
                            </div>
                        </div>
                        <div class="col-md-12 block-container">
                            <div class="col-sm-6">
                                <div class="col-sm-12 ignore-padding">
                                    <label for="cities" style="width: 100% !important;">
                                        Місто
                                    </label>
                                    <select class="form-control" id="cities"></select>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="col-sm-12 ignore-padding">
                                    <label for="streets" style="width: 100% !important;">
                                        Вулиця
                                        <i class="fa fa-plus-square fa-lg pull-right" style="color: #428bca; text-align: right; float: right"
                                           data-toggle="modal"
                                           data-target="#streetCreateModal"></i>
                                    </label>
                                    <select class="form-control" id="streets"></select>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12 block-container">
                            <div class="col-sm-6">
                                <div class="col-sm-12 ignore-padding">
                                    <label for="apartments" style="width: 100% !important;">
                                        Будинок
                                        <i class="fa fa-plus-square fa-lg" style="color: #428bca; text-align: right; float: right"
                                           data-toggle="modal"
                                           data-target="#apartmentCreateModal"></i>
                                    </label>
                                    <select class="form-control" id="apartments"></select>
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="col-sm-12 ignore-padding">
                                    <label for="flats" style="width: 100% !important;">
                                        Квартира
                                        <i class="fa fa-plus-square fa-lg" style="color: #428bca; text-align: right; float: right"
                                           data-toggle="modal"
                                           data-target="#flatCreateModal"></i>
                                    </label>
                                    <select required class="form-control" id="flats" name="FlatId"></select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="col-md-12 ignore-padding margin-top-30">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <div class="row">
                                        <div class="col-xs-12">
                                            Категорії
                                        </div>
                                    </div>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-xs-12">
                                            @for (var i = 0; i < Model.Beneficiaries.Count(); i++)
                                            {
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        <div class="checkbox">
                                                            @Html.HiddenFor(model => model.Beneficiaries[i].Id)
                                                            @Html.EditorFor(model => Model.Beneficiaries[i].IsChecked)
                                                            @Html.ValidationMessageFor(model => Model.Beneficiaries[i].IsChecked, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-xs-10 padding-top-7">@Model.Beneficiaries[i].Name</div>

                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    }
    <div class="container margin-top-30">
        <i class="fa fa-arrow-left color-svb"></i> @Html.ActionLink("Повернутися", "Index")
    </div>
</div>
@Html.Partial("_CityCreate", new CityCreateModel())
@Html.Partial("_StreetCreatePartial", new StreetCreateModel())
@Html.Partial("_ApartmentCreate", new ApartmentCreateModel())
@Html.Partial("_FlatCreate", new FlatCreateModel())
<script type="text/javascript">
    $('.radio').on('change', function () {
        $('.radio').not(this).prop('checked', false);
    });

    $(document).ready(() => {
        getOptionSelectCityPartial();
        subscribeOnSelectCity();
        subscribeOnSelectStreet();
        subscribeOnSelectApartment();
    });

    function getOptionSelectCityPartial() {
        var urlAction = "@Url.Action("OptionSelectCitiesPartial")";
        $.ajax({
            url: urlAction,
            type: 'Get',
            traditional: true,
            data: {},
            async: false
        }).done((data) => {
            $("#cities").html(data);
        });
    }

    function subscribeOnSelectCity() {
        $("#cities").change(() => {
            getStreetsPartial();
            $("#apartments").empty();
        });
    }

    function getStreetsPartial() {
        var cityId = $("#cities").val();
        var urlAction = "@Url.Action("OptionSelectStreetsPartial")";
        $.ajax({
            url: urlAction,
            type: 'Get',
            traditional: true,
            data: { cityId: cityId },
            async: false
        }).done((data) => {
            $("#streets").html(data);
        });
    }

    function subscribeOnSelectStreet() {
        $("#streets").change(() => {
            getApartmentsPartial();
        });
    }

    function subscribeOnSelectApartment() {
        $("#apartments").change(() => {
            getFlatsPartial();
        });
    }

    function getApartmentsPartial() {
        var streetId = $("#streets").val();
        var urlAction = "@Url.Action("OptionSelectApartmentPartial")";
        $.ajax({
            url: urlAction,
            type: 'Get',
            traditional: true,
            data: { streetId: streetId },
            async: false
        }).done((data) => {
            $("#apartments").html(data);
        });
    }

    function getFlatsPartial() {
        var apartmentId = $("#apartments").val();
        var urlAction = "@Url.Action("OptionSelectFlatPartial")";
        $.ajax({
            url: urlAction,
            type: 'Get',
            traditional: true,
            data: { apartmentId: apartmentId },
            async: false
        }).done((data) => {
            $("#flats").html(data);
        });
    }

</script>