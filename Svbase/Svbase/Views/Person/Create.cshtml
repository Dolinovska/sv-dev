@model Svbase.Core.Models.PersonViewModel
<div class="container body-content margin-top">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="container body-content margin-top">
            <div class="form-horizontal">
                <div class="col-md-12">
                    <h4>Створити персону</h4>
                    <hr />
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-md-12 block-container">
                    <div class="col-md-4 ignore-padding">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4 ignore-padding">
                        @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4 ignore-padding">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12 block-container">
                    <div class="col-md-4 ignore-padding">
                        @Html.LabelFor(model => model.FirthtMobilePhone, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.FirthtMobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirthtMobilePhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4 ignore-padding">
                        @Html.LabelFor(model => model.SecondMobilePhone, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SecondMobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SecondMobilePhone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-4 ignore-padding">
                        @Html.LabelFor(model => model.HomePhone, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12 block-container">
                    <div class="col-md-6 ignore-padding">
                        @Html.LabelFor(model => model.DateBirth, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.DateBirth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-6 ignore-padding">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12 block-container">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*<input value="1" name="product" class="product-list" type="checkbox">Product 1  
                        <input value="2" name="product" class="product-list" type="checkbox">Product 2*@  
                        <div class="col-md-2 col-sm-12 radio" type="checkbox" value="1">
                            @Html.EditorFor(model => model.Gender)
                            @Html.ValidationMessageFor(model => model.Gender, "", new {@class = "text-danger inline-block"})
                            <div class="inline-block">Жінка</div>
                        </div>

                        <div class="col-md-2 col-sm-12 radio" type="checkbox" value="2">
                            @Html.EditorFor(model => model.Gender)
                            @Html.ValidationMessageFor(model => model.Gender, "", new {@class = "text-danger inline-block"})
                            <div class="inline-block">Чоловік</div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 block-container">
                    <div class="col-md-6 ignore-padding">
                        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6 ignore-padding">
                        @Html.LabelFor(model => model.PartionType, htmlAttributes: new { @class = "col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PartionType, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PartionType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                @*<div class="form-group">
                    @Html.LabelFor(model => model.BeneficiaryId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BeneficiaryId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BeneficiaryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DistrictId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FlatId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FlatId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FlatId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="col-md-12">
                    <div class="col-md-12 ignore-padding">
                        <input type="submit" value="Створити" class="btn btn-default pull-right btn-svb" />
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Повернутися", "Index")
    </div>
</div>
<script type="text/javascript">
    $('.radio').on('change', function () {
        $('.radio').not(this).prop('checked', false);
    });
</script>