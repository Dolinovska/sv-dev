@using Svbase.Core.Models
@model PagedList.IPagedList<PersonSelectionModel>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>Вибірка - </title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/metisMenu.min.css" rel="stylesheet" />
    <link href="~/Content/datatables/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/dataTables.responsive.css" rel="stylesheet" />
    <link href="~/Content/sb-admin-2.min.css" rel="stylesheet" />
</head>
<div id="wrapper">
    <nav role="navigation">
        <div class="navbar-default sidebar" role="navigation" style="width: 50px">
            <div class="sidebar-nav navbar-collapse" style="margin-top: -18px">
                <ul class="nav left-filter-overflow" id="side-menu">
                    <li class="li-button" style="border-bottom: none; display: none">
                        <div class="col-xs-12" style="display:inline-flex;margin-bottom: -30px;margin-top: -5px;">
                            <button id="getAll" style="width: 50%; margin-bottom: 15px;margin-right:5px;" type="button" class="btn btn-danger click">Показати всі</button>
                            <button id="search" style="width: 35%; margin-bottom: 15px;" type="button" class="btn btn-primary click">Пошук</button>
                        </div>
                    </li>
                </ul>
            </div>
            <div class="col-md-12" style="display:inline-flex">
                <span>
                    <i class="fas fa-angle-double-right thumbtack" thumbtack="false"></i>
                </span>
            </div>
            <div class="sidebar-nav navbar-collapse">
                <ul class="nav left-filter-overflow" id="side-menu">
                    <li class="panel panel-default" style="margin-bottom: 0">
                        <a id="cities-header"
                           class="main-filter-raw-header panel-heading"
                           style="color: #428bca; background-color: silver"
                           onclick="toggleInById('cities')">
                            <i class="fa fa-table fa-fw"></i>
                        </a>
                        <ul id="cities" class="panel-collapse collapse nav nav-second-level" style="max-height: 300px; overflow-y: auto; display: none"></ul>
                    </li>
                    <li class="panel panel-default" style="margin-bottom: 0">
                        <a id="street-header"
                           class="main-filter-raw-header panel-heading"
                           style="color: #428bca; background-color: silver"
                           onclick="toggleInById('streets')">
                            <i class="fa fa-book fa-fw"></i>
                        </a>
                        <ul id="streets" class="panel-collapse collapse nav nav-second-level" style="max-height: 300px; overflow-y: auto; display: none"></ul>
                    </li>
                    <li class="panel panel-default" style="margin-bottom: 0">
                        <a id="apartment-header" class="main-filter-raw-header panel-heading"
                           style="color: #428bca; background-color: silver"
                           onclick="toggleInById('apartments')">
                            <i class="fa fa-table fa-fw"></i>
                        </a>
                        <ul id="apartments" class="panel-collapse collapse nav nav-second-level" style="max-height: 300px; overflow-y: auto; display: none"></ul>
                    </li>
                    <li class="panel panel-default" style="margin-bottom: 0">
                        <a id="flat-header" class="main-filter-raw-header panel-heading"
                           style="color: #428bca; background-color: silver"
                           onclick="toggleInById('flats')">
                            <i class="fa fa-wrench fa-fw"></i>
                        </a>
                        <ul id="flats" class="panel-collapse collapse nav nav-second-level" style="max-height: 300px; overflow-y: auto; display: none"></ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div id="page-wrapper" style="max-height: calc(100vh - 70px) !important; overflow-y: auto; margin: 0 0 50px 50px">
        <div class="row" id="personsTable">
            @Html.Partial("_PersonsTablePartial", Model)
        </div>
    </div>
</div>
<script>
    var isSidebarToogled = false;

    function toggleInById(itemId) {
        $("#" + itemId).toggle('in');
        isSidebarToogled = true;
    }

    $(".pagination li").each((index, element) => {
        $(element).addClass("click");
    });

    $(document).ready(() => {
        subscribeEvents();
        getDistrictPartialView();
        getCitiesPartialView();

        $('#loader').fadeOut();
    });

    function subscribeEvents() {
        onClickSearch();
        onClickGetAll();
    }

    function onClickGetAll() {
        $("#getAll").click(() => {
            getAll();
        });
    }

    function getAll() {
        var urlAction = "@Url.Action("All")";
        $.ajax({
            url: urlAction,
            type: 'Get',
            data: {},
            async: false
        }).done((data) => {
            $("#selectionBody").html(data);
        });
        $('#loader').fadeOut();
    }

    function onClickSearch() {
        $("#search").click(() => {
            search();
        });
    }

    function getDistrictPartialView() {
        var urlAction = "@Url.Action("FilterDistricts")";
        $.ajax({
            url: urlAction,
            type: 'Get',
            data: {},
            async: false
        }).done((data) => {
            if (data) {
                $("#districts").html(data);
            }
        });
    }

    function search() {
        $('#loader').fadeIn();
        var urlAction = "@Url.Action("PostIndex")";

        var districtIds = getCheckedDistrictIds();
        var cityIds = getCheckedCityIds();
        var streetIds = getCheckedStreetIds();
        var apartmentIds = getCheckedApartmentIds();
        var flatIds = getCheckedFlatIds();
        var beneficaries = getBeneficariesChecked();

        var columnsId = getCheckedFields();

        var filter = {
            districtIds: districtIds,
            cityIds: cityIds,
            streetIds: streetIds,
            apartmentIds: apartmentIds,
            flatIds: flatIds,
            BeneficariesChecked: beneficaries
        };

        $.ajax({
            url: urlAction,
            type: 'Post',
            data: { filter: filter },
            async: false
        }).done((data) => {
            $("#personsTable").html(data);
            hideFields(columnsId);
        });
        $('#loader').fadeOut();
    }

    function getCheckedDistrictIds() {
        var districtIds = [];
        $("#districts input:checked").each((index, element) => {
            if (!isNaN($(element).val())) {
                var id = Number($(element).val());
                districtIds.push(id);
            }
        });
        return districtIds;
    }

    function getCitiesPartialView() {
        var urlAction = "@Url.Action("FilterCities")";
        $.ajax({
            url: urlAction,
            type: 'Get',
            data: {},
            async: false
        }).done((data) => {
            if (data) {
                $("#cities").html(data);
            }
            subscribeOnClickCity();
        });
    }

    function subscribeOnClickCity() {
        $("#cities > li > a").click((event) => {
            $('#loader').fadeIn();
            var target = event.target;
            if (target instanceof HTMLInputElement) {
                var isChecked = $(target).prop("checked");
                var isHighlighted = $(target)
                    .parent().hasClass("highlighted-filter-item");
                if (isChecked && !isHighlighted) {
                    changeHighlightedStatus($(target).parent());
                    getStreets();
                } else {
                    checkStreetsByCheckedCities();
                }
            } else {
                changeHighlightedStatus(target);
                getStreets();
            }
            $('#loader').fadeOut();
        });
    }

    function getStreets() {
        var cityIds = getActiveCityIds();
        var filter = {
            cityIds: cityIds
        }
        getStreetsPartialViewByCityIds(filter);
    }


    function getActiveCityIds() {
        var cityIds = [];
        $("#cities").find(".highlighted-filter-item input").each((index, element) => {
            if (!isNaN($(element).val())) {
                var id = Number($(element).val());
                cityIds.push(id);
            }
        });
        return cityIds;
    }


    function getCheckedCityIds() {
        var cityIds = [];
        $("#cities input:checked").each((index, element) => {
            if (!isNaN($(element).val())) {
                var id = Number($(element).val());
                cityIds.push(id);
            }
        });
        return cityIds;
    }

    function getStreetsPartialViewByCityIds(filter) {
        var urlAction = "@Url.Action("FilterStreetsByCityIds")";
        $.ajax({
            url: urlAction,
            type: 'Post',
            traditional: true,
            data: filter,
            async: false
        }).done((data) => {
            var checkedStreetIds = getCheckedStreetIds();
            var checkedApartmentIds = getCheckedApartmentIds();
            var checkedFlatIds = getCheckedFlatIds();
            $("#streets").html(data);
            checkStreetByIds(checkedStreetIds);
            checkApartmentByIds(checkedApartmentIds);
            checkFlatsByIds(checkedFlatIds);
            checkStreetsByCheckedCities();
            subscribeOnClickStreet();
            getApartments();
        });
    }

    function checkStreetByIds(checkedStreetIds) {
        if (!checkedStreetIds)
            return;
        checkedStreetIds.forEach((x) => {
            $("#street_" + x).prop("checked", true);
        });
    }

    function getCheckedStreetIds() {
        var streetIds = [];
        $("#streets input:checked").each((index, element) => {
            if (!isNaN($(element).val())) {
                var id = Number($(element).val());
                streetIds.push(id);
            }
        });
        return streetIds;
    }

    function getCheckedApartmentIds() {
        var apartmentIds = [];
        $("#apartments input:checked").each((index, element) => {
            if (!isNaN($(element).val())) {
                var id = Number($(element).val());
                apartmentIds.push(id);
            }
        });
        return apartmentIds;
    }

    function getCheckedFlatIds() {
        var flatIds = [];
        $("#flats input:checked").each((index, element) => {
            if (!isNaN($(element).val())) {
                var id = Number($(element).val());
                flatIds.push(id);
            }
        });
        return flatIds;
    }

    function checkStreetsByCheckedCities() {
        var cityIds = getCheckedCityIds();
        if (!cityIds)
            return;
        cityIds.forEach((x) => {
            var target = $(".street_" + x + " input");
            $(target).prop("checked", true);
            if (!$(target).parent().hasClass("highlighted-filter-item")) {
                changeHighlightedStatus($(target).parent());
            }
            getApartments();
        });
    }

    function changeHighlightedStatus(target) {
        var active = $(target).hasClass("highlighted-filter-item");
        if (active) {
            $(target).removeClass("highlighted-filter-item");
            $(target).children().prop("checked", false);
        } else {
            $(target).addClass("highlighted-filter-item");
        }
    }

    function subscribeOnClickStreet() {
        $("#streets > li > a").click((event) => {
            $('#loader').fadeIn();

            var target = event.target;
            if (target instanceof HTMLInputElement) {
                var isChecked = $(target).prop("checked");
                var isHighlighted = $(target)
                    .parent().hasClass("highlighted-filter-item");
                if (isChecked && !isHighlighted) {
                    changeHighlightedStatus($(target).parent());
                    getApartments();
                } else {
                    checkApartmentsByCheckedStreets();
                }
            } else {
                changeHighlightedStatus(target);
                getApartments();
            }
            $('#loader').fadeOut();
        });
    }

    function getApartments() {
        var streetIds = getActiveStreetIds();
        var filter = {
            streetIds: streetIds
        }
        getApartmentsPartialViewByStreetIds(filter);
    }

    function getActiveStreetIds() {
        var streetIds = [];
        $("#streets").find(".highlighted-filter-item input").each((index, element) => {
            if (!isNaN($(element).val())) {
                var id = Number($(element).val());
                streetIds.push(id);
            }
        });
        return streetIds;
    }

    function getApartmentsPartialViewByStreetIds(filter) {
        var urlAction = "@Url.Action("FilterApartmentsByStreetIds")";
        $.ajax({
            url: urlAction,
            type: 'Post',
            traditional: true,
            data: filter,
            async: false
        }).done((data) => {
            var checkedApartmentIds = getCheckedApartmentIds();
            var checkedFlatIds = getCheckedFlatIds();
            $("#apartments").html(data);
            checkApartmentByIds(checkedApartmentIds);
            checkFlatsByIds(checkedFlatIds);
            checkApartmentsByCheckedStreets();
            subscribeOnClickApartment();
        });
    }

    function checkApartmentByIds(checkedApartmentIds) {
        if (!checkedApartmentIds)
            return;
        checkedApartmentIds.forEach((x) => {
            $("#apartment_" + x).prop("checked", true);
        });
    }

    function checkApartmentsByCheckedStreets() {
        var streetIds = getCheckedStreetIds();
        if (!streetIds)
            return;
        streetIds.forEach((x) => {
            var target = $(".apartment_" + x + " input");
            $(target).prop("checked", true);
            if (!$(target).parent().hasClass("highlighted-filter-item")) {
                changeHighlightedStatus($(target).parent());
            }
        });
        getFlats();
    }

    function subscribeOnClickApartment() {
        $("#apartments > li > a").click((event) => {
            $('#loader').fadeIn();
            var target = event.target;
            if (target instanceof HTMLInputElement) {
                var isChecked = $(target).prop("checked");
                var isHighlighted = $(target)
                    .parent().hasClass("highlighted-filter-item");
                if (isChecked && !isHighlighted) {
                    changeHighlightedStatus($(target).parent());
                    getFlats();
                } else {
                    checkFlatsByCheckedApartments();
                }
            } else {
                changeHighlightedStatus(target);
                getFlats();
            }
            $('#loader').fadeOut();
        });
    }

    function checkFlatsByCheckedApartments() {
        var apartmentIds = getCheckedApartmentIds();
        if (!apartmentIds)
            return;
        apartmentIds.forEach((x) => {
            $(".flat_" + x + " input").prop("checked", true);
        });
    }

    function getFlats() {
        var apartmentIds = getActiveApartmentIds();
        var filter = {
            apartmentIds: apartmentIds
        }
        getFlatsPartialViewByApartmentIds(filter);
    }


    function getActiveApartmentIds() {
        var apartmentIds = [];
        $("#apartments").find(".highlighted-filter-item input").each((index, element) => {
            if (!isNaN($(element).val())) {
                var id = Number($(element).val());
                apartmentIds.push(id);
            }
        });
        return apartmentIds;
    }

    function getFlatsPartialViewByApartmentIds(filter) {
        var urlAction = "@Url.Action("FilterFlatsByApartmentIds")";
        $.ajax({
            url: urlAction,
            type: 'Post',
            traditional: true,
            data: filter,
            async: false
        }).done((data) => {
            var checkedFlatIds = getCheckedFlatIds();
            $("#flats").html(data);
            checkFlatsByIds(checkedFlatIds);
            checkFlatsByCheckedApartments();
        });
    }

    function checkFlatsByIds(checkedFlatIds) {
        if (!checkedFlatIds)
            return;
        checkedFlatIds.forEach((x) => {
            $("#flat_" + x).prop("checked", true);
        });
    }

    function getCheckedFields() {
        var fields = [];
        $(".column-name input:checked").each((index, element) => {
            var fieldName = $(element).closest('a')[0].getAttribute("id");
            if (fieldName !== "") {
                fields.push(fieldName);
            }
        });
        return fields;
    }

    function getCheckedFieldsName() {
        var fields = [];
        $(".column-name input:checked").each((index, element) => {
            var fieldName = $(element)[0].getAttribute("id");
            if (fieldName !== "") {
                fields.push(fieldName);
            }
        });
        return fields;
    }


    // ==================   start show full/part of left filter   ================== //
    $(document).on('click', '.thumbtack', function () {
        var currentVal = $(this).attr('thumbtack');
        if (currentVal === "true") {
            $(this).closest('span').html('<i class="fas fa-angle-double-right thumbtack" thumbtack="false"></i>');
            showPartOfFilterBlock();
        } else {
            $(this).closest('span').html('<i class="fas fa-angle-double-left thumbtack" thumbtack="true"></i>');
            showFullFilterBlock();
        }
    });

    var isDistrictsHidden = true;
    var isCitiesHidden = true;
    var isStreetsHidden = true;
    var isApartmentsHidden = true;
    var isFlatsHidden = true;
    function checkSidebarProperties() {
        if ($("#districts").css("display") === "none") isDistrictsHidden = true;
        else isDistrictsHidden = false;

        if ($("#cities").css("display") === "none") isCitiesHidden = true;
        else isCitiesHidden = false;

        if ($("#streets").css("display") === "none") isStreetsHidden = true;
        else isStreetsHidden = false;

        if ($("#apartments").css("display") === "none") isApartmentsHidden = true;
        else isApartmentsHidden = false;

        if ($("#flats").css("display") === "none") isFlatsHidden = true;
        else isFlatsHidden = false;

        isSidebarToogled = false;
    }

    var isMouseOver = true;
    function showFullFilterBlock() {
        if (isSidebarToogled) checkSidebarProperties();

            if (!isDistrictsHidden) $("#districts").css("display", "block");
            if (!isCitiesHidden) $("#cities").css("display", "block");
            if (!isStreetsHidden) $("#streets").css("display", "block");
            if (!isApartmentsHidden) $("#apartments").css("display", "block");
            if (!isFlatsHidden) $("#flats").css("display", "block");

            $(".sidebar").css("width", "250px");
            $("#page-wrapper").css("margin", "0 0 0 250px");
            $("#side-menu .li-button").css("display", "block");

            $("#districts-header").html('<i class="fa fa-history fa-fw"></i> Округи');
            $("#cities-header").html('<i class="fa fa-table fa-fw"></i> Місто, район');
            $("#street-header").html('<i class="fa fa-book fa-fw"></i> Вулиця');
            $("#apartment-header").html('<i class="fa fa-table fa-fw"></i> Будинки');
            $("#flat-header").html('<i class="fa fa-wrench fa-fw"></i> Номер квартири');
    };

    function showPartOfFilterBlock() {
            if (isSidebarToogled) checkSidebarProperties();

            if (!isDistrictsHidden) $("#districts").css("display", "none");
            if (!isCitiesHidden) $("#cities").css("display", "none");
            if (!isStreetsHidden) $("#streets").css("display", "none");
            if (!isApartmentsHidden) $("#apartments").css("display", "none");
            if (!isFlatsHidden) $("#flats").css("display", "none");

            $(".sidebar").css("width", "50px");
            $("#page-wrapper").css("margin", "0 0 0 50px");
            $("#side-menu .li-button").css("display", "none");

            $("#districts-header").html('<i class="fa fa-history fa-fw"></i>');
            $("#cities-header").html('<i class="fa fa-table fa-fw"></i>');
            $("#street-header").html('<i class="fa fa-book fa-fw"></i>');
            $("#apartment-header").html('<i class="fa fa-table fa-fw"></i>');
            $("#flat-header").html('<i class="fa fa-wrench fa-fw"></i>');
    };
    // ==================   end show full/part of left filter   ================== //


    function getBeneficariesUnchecked() {
        var beneficaries = [];
        $(".beneficary input").each((index, element) => {
            var fieldName = $(element).parent().attr("id");
            if (fieldName !== "" && !$(".beneficary #" + fieldName + " input").is(":checked")) {
                beneficaries.push(fieldName);
            }
        });
        return beneficaries;
    }

    function getBeneficariesChecked() {
        var beneficaries = [];
        $(".beneficary input").each((index, element) => {
            var fieldName = $(element).parent().attr("id");
            if (fieldName !== "" && $(".beneficary #" + fieldName + " input").is(":checked")) {
                beneficaries.push(fieldName);
            }
        });
        return beneficaries;
    }

    function hideFields(columnsName) {
        var islastNameDisplay = false;
        var isFirstNameDisplay = false;
        var isMiddleNameDisplay = false;
        var isPhoneFirstDisplay = false;
        var isPhoneSecondDisplay = false;
        var isHomePhoneDisplay = false;
        var isDateBirthDisplay = false;
        var isEmailDisplay = false;
        var isAddressDisplay = false;
        var isWorkPlaceDisplay = false;
        var isDeadDisplay = false;

        for (var i = 0; i < columnsName.length; i++) {
            if (columnsName[i] === "lastNameDisplay")
                islastNameDisplay = true;
            else if (columnsName[i] === "firstNameDisplay")
                isFirstNameDisplay = true;
            else if (columnsName[i] === "middleNameDisplay")
                isMiddleNameDisplay = true;
            else if (columnsName[i] === "phoneFirstDisplay")
                isPhoneFirstDisplay = true;
            else if (columnsName[i] === "phoneSecondDisplay")
                isPhoneSecondDisplay = true;
            else if (columnsName[i] === "phoneSecondDisplay")
                isPhoneSecondDisplay = true;
            else if (columnsName[i] === "homePhoneDisplay")
                isHomePhoneDisplay = true;
            else if (columnsName[i] === "dateBirthDisplay")
                isDateBirthDisplay = true;
            else if (columnsName[i] === "emailDisplay")
                isEmailDisplay = true;
            else if (columnsName[i] === "addressDisplay")
                isAddressDisplay = true;
            else if (columnsName[i] === "workPlaceDisplay")
                isWorkPlaceDisplay = true;
            else if (columnsName[i] === "isDeadDisplay")
                isDeadDisplay = true;
        }

        if (!islastNameDisplay) {
            $("tr #lastNameHidden").hide();
            $("#lastNameDisplay input").prop('checked', false);
        }

        if (!isFirstNameDisplay) {
            $("tr #firstNameHidden").hide();
            $("#firstNameDisplay input").prop('checked', false);
        }

        if (!isMiddleNameDisplay) {
            $("tr #middleNameHidden").hide();
            $("#middleNameDisplay input").prop('checked', false);
        }

        if (!isPhoneFirstDisplay) {
            $("tr #phone1Hidden").hide();
            $("#phoneFirstDisplay input").prop('checked', false);
        }

        if (!isPhoneSecondDisplay) {
            $("tr #phone2Hidden").hide();
            $("#phoneSecondDisplay input").prop('checked', false);
        }

        if (!isHomePhoneDisplay) {
            $("tr #homeNumberHidden").hide();
            $("#homePhoneDisplay input").prop('checked', false);
        }

        if (!isDateBirthDisplay) {
            $("tr #birthDateHidden").hide();
            $("#dateBirthDisplay input").prop('checked', false);
        }

        if (!isEmailDisplay) {
            $("tr #emailNameHidden").hide();
            $("#emailDisplay input").prop('checked', false);
        }

        if (!isAddressDisplay) {
            $("tr #cityNameHidden").hide();
            $("tr #streetNameHidden").hide();
            $("tr #houseNameHidden").hide();
            $("tr #flatNameHidden").hide();
            $("#addressDisplay input").prop('checked', false);
        }

        if (!isWorkPlaceDisplay) {
            $("tr #workPlaceHidden").hide();
            $("#workPlaceDisplay input").prop('checked', false);
        }

        if (!isDeadDisplay) {
            $("tr #isDeadHidden").hide();
            $("#isDeadDisplay input").prop('checked', false);
        }
    };

    $(document).on('click', '.pagination > li > a', function (e) {
        e.preventDefault();

        var page = $(this)[0].search.trim().substring(6);

        if (page === "")
            return false;

        var districtIds = getCheckedDistrictIds();
        var cityIds = getCheckedCityIds();
        var streetIds = getCheckedStreetIds();
        var apartmentIds = getCheckedApartmentIds();
        var flatIds = getCheckedFlatIds();
        var beneficaries = getBeneficariesChecked();

        var columnsId = getCheckedFields();

        $.ajax({
            url: "@Url.Action("PostIndex", "Person")",
            type: 'Post',
            data: { districtIds: districtIds, cityIds: cityIds, streetIds: streetIds, apartmentIds: apartmentIds, flatIds: flatIds, BeneficariesChecked: beneficaries, page: page },
            async: false
        }).done((data) => {
            $("#personsTable").html(data);
            hideFields(columnsId);
        });
        $('#loader').fadeOut();
    });

</script>
